/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sipl.recursos;

import com.itextpdf.text.Anchor;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.MalformedURLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import sipl.db.Conexion;
import sipl.db.materialDAO;
import sipl.dominio.Material;
import sipl.dominio.Usuario;

/**
 *
 * @author WM
 */
public class GenerarPDFListar {

    private static final Conexion con = new Conexion();
    private static final materialDAO matDAO = new materialDAO(con);
    private static String FILE = "";
    private static final Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static final Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static final Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);
    private static String Titulo = "";
    private static Usuario user;
    private static String direc="";

    public void generarPDF(String titulo, String imagen, Usuario usu, String dir) throws BadElementException, IOException {
        user = usu;
        direc+=dir;
        Titulo = titulo;
        Calendar cal1 = Calendar.getInstance();
        String fecha = cal1.get(Calendar.YEAR) + "-";
        int mes = cal1.get(Calendar.MONTH);
        mes++;
        fecha += mes + "-";
        fecha += cal1.get(Calendar.DAY_OF_MONTH);
        fecha += " " + cal1.get(Calendar.HOUR_OF_DAY);
        fecha += "-" + cal1.get(Calendar.MINUTE) + "-00";
        FILE += titulo + " " + fecha + ".pdf";
        try {
            Document document = new Document();
            FileOutputStream file = new FileOutputStream(dir + "PDF//" + FILE);
            PdfWriter.getInstance(document, file);
            document.open();
            document.setMargins(10, 10, 10, 10);
            addMetaData(document);
            addTitlePage(document);
            addContent(document);
            document.close();
        } catch (FileNotFoundException | DocumentException e) {
        }
    }

    // iText allows to add metadata to the PDF which can be viewed in your Adobe
    // Reader
    // under File -> Properties
    private static void addMetaData(Document document) {
        document.addTitle(Titulo);
        document.addSubject("Lista específica");
        document.addKeywords("Java, PDF, iText");
        document.addAuthor("Wilmar González - Sandra Vera");
        document.addCreator("SIPL");
    }

    private static void addTitlePage(Document document)
            throws DocumentException, MalformedURLException, BadElementException, IOException {
        Paragraph preface = new Paragraph();
        // We add one empty line
        addEmptyLine(preface, 1);
        // Lets write a big header
        preface.add(new Paragraph(Titulo, catFont));

        addEmptyLine(preface, 1);
        // Will create: Report generated by: _name, _date
        preface.add(new Paragraph("Reporte generado por: " + user.getNombre() + " " + user.getApellido() + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
                smallBold));
        addEmptyLine(preface, 3);
        preface.add(new Paragraph("Este documento es creado a petición del autor",
                smallBold));

        addEmptyLine(preface, 6);
        Image img = Image.getInstance(direc+ "img//logo_unab.jpg");
        
        img.scaleAbsolute(70, 100);
        img.setAlignment(Image.ALIGN_CENTER);
        Chunk c = new Chunk(img, 0, 0);
        preface.add(new Paragraph("Este documento es creado a petición del autor",
                smallBold));
        preface.add(c);
        //document.add(c);
        document.add(preface);
        // Start a new page
        document.newPage();
    }

    private static void addContent(Document document) throws DocumentException {
        Anchor anchor = new Anchor(Titulo, catFont);
        anchor.setName(Titulo);

        // Second parameter is the number of the chapter
        Chapter catPart = new Chapter(new Paragraph(anchor), 1);

        Paragraph subPara = new Paragraph("", subFont);
        Section subCatPart = catPart.addSection(subPara);

        // add a table
        createTable(subCatPart);

        // now add all this to the document
        document.add(catPart);

    }

    private static void createTable(Section subCatPart)
            throws BadElementException {

        if (Titulo.equals("Listar materiales")) {
            ArrayList<Material> materiales = matDAO.getMateriales();
            PdfPTable table = new PdfPTable(7);
            PdfPCell c1 = new PdfPCell(new Phrase("Código"));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(c1);
            c1 = new PdfPCell(new Phrase("Tipo"));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            //table.addCell(c1);
            //c1 = new PdfPCell(new Phrase("Descrip"));
            //c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(c1);
            c1 = new PdfPCell(new Phrase("Marca"));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(c1);
            c1 = new PdfPCell(new Phrase("Serial"));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(c1);
            c1 = new PdfPCell(new Phrase("Estado actual"));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(c1);
            c1 = new PdfPCell(new Phrase("Nro Inventario"));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(c1);
            c1 = new PdfPCell(new Phrase("Disp"));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(c1);
            table.setHeaderRows(1);
            for (int i = 0; i < materiales.size(); i++) {
                Material mat = materiales.get(i);
                table.addCell("" + mat.getCodigo());
                table.addCell(mat.getTipo_mat().getNombre());
                //table.addCell(mat.getDescripcion());
                table.addCell(mat.getMarca());
                table.addCell(mat.getSerial());
                if (mat.getEstado() == 0) {
                    table.addCell("Activo");
                } else if (mat.getEstado() == 1) {
                    table.addCell("Dado de Baja");
                } else if (mat.getEstado() == 2) {
                    table.addCell("Dañado");
                } else {
                    table.addCell("Error");
                }
                table.addCell(mat.getNum_inventario());
                if (mat.getDisponibilidad() == 0) {
                    table.addCell("Libre");
                } else if (mat.getDisponibilidad() == 1) {
                    table.addCell("Prestado");
                } else if (mat.getDisponibilidad() == 2) {
                    table.addCell("Reservado");
                } else {
                    table.addCell("Error");
                }
            }
            subCatPart.add(table);
        }

    }

    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
}
